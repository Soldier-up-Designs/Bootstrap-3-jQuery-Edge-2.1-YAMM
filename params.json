{"name":"Bs3-jq2-yamm","tagline":"Lightbox and Bootstrap Mega-Menu for Bootstrap 3.3.1 & Jquery 2.1.1","body":"\r\nBS3-JQ2-YAMM\r\n\r\n-- About -- Lightbox and Bootstrap Mega-Menu for Bootstrap 3.3.1 & Jquery 2.1.1\r\n\r\nUtilizes Bootstraps modal plugin to implement a lightbox gallery and Custom CSS to Display the Mega-Menu Dropsdowns - Lightbox forked from AshleyDW and Dropdown Mega-Menu forked from YAMM (Yet Another Mega Menu) Geedmo's - YAMM3\r\n\r\n-- simple Install -- Unzip package in htdocs server folder(XAMPP)\r\n\r\nor\r\n\r\ncreate a simple HTTP-Server by running from the command line:\r\n\r\nhttp-server: a command-line http server\r\n\r\nhttp-server is a simple, zero-configuration command-line http server. It is powerful enough for production usage, but it's simple and hackable enough to be used for testing, local development, and learning.\r\n\r\nInstalling globally:\r\n\r\nInstallation via npm. If you don't have npm yet:\r\n\r\n`$ curl https://npmjs.org/install.sh | sh`\r\n\r\nOnce you have npm:\r\n\r\n`$ npm install http-server -g`\r\n\r\nThis will install http-server globally so that it may be run from the command line. Usage:\r\n\r\n`$ http-server [path] [options]`\r\n\r\n[path] defaults to ./public if the folder exists, and ./ otherwise. Installing as a node app\r\n\r\n`$ mkdir myapp\r\n`$ cd myapp/`\r\n`$ jitsu install http-server`\r\n\r\nIf you do not have jitsu installed you can install it via npm install jitsu -g Usage Starting http-server locally\r\n\r\n`$ node bin/http-server`\r\n\r\nNow you can visit http://localhost:8080 to view your server Deploy http-server to nodejitsu\r\n\r\n`$ jitsu deploy`\r\n\r\nYou will now be prompted for a subdomain to deploy your application on Available Options:\r\n\r\n`-p Port to use (defaults to 8080)`\r\n\r\n`-a Address to use (defaults to 0.0.0.0)`\r\n\r\n`-d Show directory listings (defaults to 'True')`\r\n\r\n`-i Display autoIndex (defaults to 'True')`\r\n\r\n`-e or --ext Default file extension if none supplied (defaults to 'html')`\r\n\r\n`-s or --silent Suppress log messages from output`\r\n\r\n`--cors Enable CORS via the Access-Control-Allow-Origin header`\r\n\r\n`-o Open browser window after staring the server`\r\n\r\n`-h or --help Print this list and exit.`\r\n\r\n`-c Set cache time (in seconds) for cache-control max-age header, e.g. -c10 for 10 seconds (defaults to '3600'). To disable caching, use -c-1.\r\n","google":"UA-49235381-1","note":"Don't delete this file! It's used internally to help with page regeneration."}